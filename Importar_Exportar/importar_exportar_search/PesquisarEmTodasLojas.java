/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package importar_exportar_search;

import gb_evento.Gbproduto;
import java.util.List;
import jpa.DAOGenericoJPA;
import jpa.JPAUtil;
import utilidades.Exportando;

/**
 *
 * @author AnaMariana
 */
public class PesquisarEmTodasLojas extends javax.swing.JFrame {

    ListaSAPNaoCadastrado ListaSAPNaoCadastrado;
    
    Menu_Pesquisa_Importar_Exportar Menu;
    String layout = "";
    
    Exportando Exportando = null;
    
    /**
     * Creates new form OperacaoRealizada
     * @param layout2
     * @param Menu_Pesquisa_Importar_Exportar2
     */
    public PesquisarEmTodasLojas( String layout2, Menu_Pesquisa_Importar_Exportar Menu_Pesquisa_Importar_Exportar2 ) { 
        initComponents();
        lbAcao.setText("PESQUISAR - LOJAS");
        centralizeFrame();

        layout = layout2;
        Menu = Menu_Pesquisa_Importar_Exportar2;
    }
    
    private void centralizeFrame() {  
        int x,y;  
        java.awt.Rectangle scr  = this.getGraphicsConfiguration().getBounds();  
        java.awt.Rectangle form = this.getBounds();  
        x = (int) ( scr.getWidth() - form.getWidth() ) / 2;  
        y = (int) ( scr.getHeight()- form.getHeight()) / 2;  
        this.setLocation( x , y );  
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        lbAcao = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        tfLogradouro2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tpListSaps = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tpListLojas = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tfLogradouro3 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tpListLojaSap = new javax.swing.JTextPane();
        jLabel6 = new javax.swing.JLabel();
        tfLogradouro4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilidades_imagens/catalogo_70.png"))); // NOI18N

        lbAcao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbAcao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAcao.setText("PESQUISAR EM TODAS AS LOJAS");

        tfLogradouro2.setEditable(false);
        tfLogradouro2.setBackground(new java.awt.Color(255, 51, 51));
        tfLogradouro2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfLogradouro2.setForeground(new java.awt.Color(255, 255, 255));
        tfLogradouro2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfLogradouro2.setText("LISTAR PRODUTOS POR LOJA");
        tfLogradouro2.setToolTipText("NA LISTA SAP INFORME OS FORNECEDORES E NA OUTRA AS LOJAS");
        tfLogradouro2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(201, 239, 237), 1, true));
        tfLogradouro2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tfLogradouro2.setPreferredSize(new java.awt.Dimension(247, 23));
        tfLogradouro2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfLogradouro2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfLogradouro2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tfLogradouro2MousePressed(evt);
            }
        });
        tfLogradouro2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfLogradouro2KeyReleased(evt);
            }
        });

        jScrollPane2.setViewportView(tpListSaps);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("LISTA SAPS");

        jScrollPane1.setViewportView(tpListLojas);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("LISTA LOJAS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(tfLogradouro2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tfLogradouro2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tfLogradouro3.setEditable(false);
        tfLogradouro3.setBackground(new java.awt.Color(255, 51, 51));
        tfLogradouro3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfLogradouro3.setForeground(new java.awt.Color(255, 255, 255));
        tfLogradouro3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfLogradouro3.setText("LISTAR PRODUTOS LOJA / SAP");
        tfLogradouro3.setToolTipText("NA LISTA SAP INFORME OS FORNECEDORES E NA OUTRA AS LOJAS");
        tfLogradouro3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(201, 239, 237), 1, true));
        tfLogradouro3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tfLogradouro3.setPreferredSize(new java.awt.Dimension(247, 23));
        tfLogradouro3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfLogradouro3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfLogradouro3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tfLogradouro3MousePressed(evt);
            }
        });
        tfLogradouro3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfLogradouro3KeyReleased(evt);
            }
        });

        jScrollPane3.setViewportView(tpListLojaSap);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("INFORME A LISTA: LOJA - SAP");

        tfLogradouro4.setEditable(false);
        tfLogradouro4.setBackground(new java.awt.Color(255, 51, 51));
        tfLogradouro4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfLogradouro4.setForeground(new java.awt.Color(255, 255, 255));
        tfLogradouro4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfLogradouro4.setText("ÃšLTIMA ENTRADA  LOJA / SAP");
        tfLogradouro4.setToolTipText("NA LISTA SAP INFORME OS FORNECEDORES E NA OUTRA AS LOJAS");
        tfLogradouro4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(201, 239, 237), 1, true));
        tfLogradouro4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tfLogradouro4.setPreferredSize(new java.awt.Dimension(247, 23));
        tfLogradouro4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfLogradouro4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfLogradouro4MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tfLogradouro4MousePressed(evt);
            }
        });
        tfLogradouro4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfLogradouro4KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfLogradouro3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfLogradouro4, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tfLogradouro3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfLogradouro4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lbAcao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbAcao))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfLogradouro2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfLogradouro2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLogradouro2MouseEntered

    private void tfLogradouro2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfLogradouro2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLogradouro2MouseExited

    private void tfLogradouro2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfLogradouro2MousePressed
          listarProdutosPorLojas();
    }//GEN-LAST:event_tfLogradouro2MousePressed

    private void tfLogradouro2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfLogradouro2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLogradouro2KeyReleased

    private void tfLogradouro3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfLogradouro3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLogradouro3MouseEntered

    private void tfLogradouro3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfLogradouro3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLogradouro3MouseExited

    private void tfLogradouro3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfLogradouro3MousePressed
        listarProdutosPorLojaSap();
    }//GEN-LAST:event_tfLogradouro3MousePressed

    private void tfLogradouro3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfLogradouro3KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLogradouro3KeyReleased

    private void tfLogradouro4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfLogradouro4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLogradouro4MouseEntered

    private void tfLogradouro4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfLogradouro4MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLogradouro4MouseExited

    private void tfLogradouro4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfLogradouro4MousePressed
        ultimaEntradaPorLojaSap();
    }//GEN-LAST:event_tfLogradouro4MousePressed

    private void tfLogradouro4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfLogradouro4KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLogradouro4KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PesquisarEmTodasLojas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PesquisarEmTodasLojas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PesquisarEmTodasLojas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PesquisarEmTodasLojas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                //new ListaSAP().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbAcao;
    public javax.swing.JTextField tfLogradouro2;
    public javax.swing.JTextField tfLogradouro3;
    public javax.swing.JTextField tfLogradouro4;
    private javax.swing.JTextPane tpListLojaSap;
    private javax.swing.JTextPane tpListLojas;
    private javax.swing.JTextPane tpListSaps;
    // End of variables declaration//GEN-END:variables

    private void listarProdutosPorLojas(){
        
        Menu.Tabela_Pesquisa_BD_Estabelecimento.setarCabecalhoPesquisarEmTodasLojas();
        
        new Thread() {
            @Override
                public void run() {                    
                        try { 
                            Exportando Exportando = new Exportando("PESQUISANDO PRODUTOS");

                            String str[] = tpListSaps.getText().split("\n");
                            if( !str.equals("") ){
                                                                
                                Exportando.setVisible(true);
                                Exportando.pbg.setMinimum(0);
                                Exportando.pbg.setMaximum( str.length );
                                
                                fechar(); 
                                
                                DAOGenericoJPA DAOGenericoJPA = new DAOGenericoJPA(Gbproduto.class, JPAUtil.em());
                                ListaSAPNaoCadastrado = new ListaSAPNaoCadastrado( Menu );
                                
                                for (int i = 0; i < str.length; i++){
                                    Exportando.pbg.setValue( i );
 
                                    String busca = ""; try{ busca = str[i].trim(); }catch( Exception e ){ }
                                    
                                    List<Gbproduto> XXGbprodutoListaSap = null;
                                    
                                    try{ 
                                        
                                        XXGbprodutoListaSap = (List<Gbproduto>) DAOGenericoJPA.getBeansCom_1_Parametro(Gbproduto.class, "SELECT * FROM SCHEMAJMARY.GBPRODUTO WHERE MATERIAL = ?", busca );
                                    }catch( Exception e ){ }
                                    
                                    String rbusca = ""; try{ rbusca = XXGbprodutoListaSap.get(0).getMaterial(); }catch( Exception e ){}
                                    
                                    if( busca.equals(rbusca) ){
                                        if( !busca.equals("") ){
                                            
                                            String lojas[] = tpListLojas.getText().split("\n");
                                            
                                            if( !lojas.equals("") ){
                                                
                                                for (int c = 0; c < lojas.length; c++){
                                                    
                                                    String lj = ""; try{ lj = lojas[c].toUpperCase().trim(); }catch( Exception e ){ }
                                                    
                                                    Menu.Tabela_Pesquisa_BD_Estabelecimento.pesquisarEmTodasLojas( lj,"", XXGbprodutoListaSap.get(0) );
                                                }
                                            }
                                        }
                                    }
                                    else{
                                        
                                        String txt = ListaSAPNaoCadastrado.tpListSap.getText();
                                        ListaSAPNaoCadastrado.tpListSap.setText( txt+"\n"+busca );
                                    }
                                    
                                }                                
                            }
                            
                            String txt = ListaSAPNaoCadastrado.tpListSap.getText().trim();
                            if( !txt.equals("") ){ ListaSAPNaoCadastrado.setVisible(true); }
                        
                            Exportando.fechar();                     
                        }catch( Exception e ){ fechar(); }
                }
            }.start();
    }
    
    public void fechar(){ 
        this.dispose();
    }
    
    private void listarProdutosPorLojaSap(){
        
        Menu.Tabela_Pesquisa_BD_Estabelecimento.setarCabecalhoPesquisarEmTodasLojas();
        
        new Thread() {
            @Override
                public void run() {                    
                        try { 
                            Exportando Exportando = new Exportando("PESQUISANDO PRODUTOS");

                            String str[] = tpListLojaSap.getText().split("\n");
                            if( !str.equals("") ){
                                                                
                                Exportando.setVisible(true);
                                Exportando.pbg.setMinimum(0);
                                Exportando.pbg.setMaximum( str.length );
                                
                                fechar(); 
                                
                                DAOGenericoJPA DAOGenericoJPA = new DAOGenericoJPA(Gbproduto.class, JPAUtil.em());
                                ListaSAPNaoCadastrado = new ListaSAPNaoCadastrado( Menu );
                                
                                for (int i = 0; i < str.length; i++){
                                    Exportando.pbg.setValue( i );
 
                                    String linha = str[i].trim();
                                    StringBuilder loja = new StringBuilder(); StringBuilder sap = new StringBuilder();
                                    
                                    int cuntP = 0;
                                    
                                    int b = 0;
                                    String anterior = "x";
                                    
                                    char c[] = linha.toCharArray();
                                    String v = "";
                                    for (int r = 0; r < c.length; r++){  
                                        
                                        v = String.valueOf( c[r] ).replace("/", ".").trim();
                                        if( v.equals("") ){
                                            
                                            if( !anterior.equals("") ){
                                                
                                                cuntP = 0;
                                                b++;
                                                //System.out.println( anterior );
                                            }
                                        }
                                        else if( !v.equals("") && b == 0 ){
                                            
                                            if( v.equals(".") ){
                                                cuntP++;
                                                
                                                if( cuntP < 2 ){
                                                    loja.append( v ); 
                                                }
                                            }    
                                            else if( cuntP < 2 ){
                                                
                                                loja.append( v ); 
                                            }
                                        }
                                        else if( !v.equals("") && b == 1 ){  
                                            
                                            if( v.equals(".") ){
                                                cuntP++;
                                                
                                                if( cuntP < 2 ){
                                                    sap.append( v ); 
                                                }
                                            }    
                                            else if( cuntP < 2 ){
                                                
                                                sap.append( v ); 
                                            }
                                        }
                                    }
                                    
                                    String busca = ""; try{ busca = sap.toString().trim(); }catch( Exception e ){ }
                                    
                                    List<Gbproduto> XXGbprodutoListaSap = null;
                                    
                                    try{ 
                                        
                                        XXGbprodutoListaSap = (List<Gbproduto>) DAOGenericoJPA.getBeansCom_1_Parametro(Gbproduto.class, "SELECT * FROM SCHEMAJMARY.GBPRODUTO WHERE MATERIAL = ?", busca );
                                    }catch( Exception e ){ }
                                    
                                    String rbusca = ""; try{ rbusca = XXGbprodutoListaSap.get(0).getMaterial(); }catch( Exception e ){}
                                    
                                    if( busca.equals(rbusca) ){
                                        if( !busca.equals("") ){
                                            
                                            String lj = ""; try{ lj = loja.toString().toUpperCase().trim(); }catch( Exception e ){ }
                                                    
                                            Menu.Tabela_Pesquisa_BD_Estabelecimento.pesquisarEmTodasLojas( lj,"", XXGbprodutoListaSap.get(0) );
                                        }
                                    }
                                    else{
                                        
                                        String txt = ListaSAPNaoCadastrado.tpListSap.getText();
                                        ListaSAPNaoCadastrado.tpListSap.setText( txt+"\n"+busca );
                                    }
                                    
                                }                                
                            }
                            
                            String txt = ListaSAPNaoCadastrado.tpListSap.getText().trim();
                            if( !txt.equals("") ){ ListaSAPNaoCadastrado.setVisible(true); }
                        
                            Exportando.fechar();                     
                        }catch( Exception e ){ fechar(); }
                }
            }.start();
    }
    
    private void ultimaEntradaPorLojaSap(){
        
        Menu.Tabela_Pesquisa_BD_Estabelecimento.setarCabecalhoUltimaEntradaTodasLojas();
        
        new Thread() {
            @Override
                public void run() {                    
                        try { 
                            Exportando Exportando = new Exportando("PESQUISANDO PRODUTOS");

                            String str[] = tpListLojaSap.getText().split("\n");
                            if( !str.equals("") ){
                                                                
                                Exportando.setVisible(true);
                                Exportando.pbg.setMinimum(0);
                                Exportando.pbg.setMaximum( str.length );
                                
                                fechar(); 
                                
                                DAOGenericoJPA DAOGenericoJPA = new DAOGenericoJPA(Gbproduto.class, JPAUtil.em());
                                ListaSAPNaoCadastrado = new ListaSAPNaoCadastrado( Menu );
                                
                                for (int i = 0; i < str.length; i++){
                                    Exportando.pbg.setValue( i );
 
                                    String linha = str[i].trim();
                                    StringBuilder loja = new StringBuilder(); StringBuilder sap = new StringBuilder();
                                    
                                    int cuntP = 0;
                                    
                                    int b = 0;
                                    String anterior = "x";
                                    
                                    char c[] = linha.toCharArray();
                                    String v = "";
                                    for (int r = 0; r < c.length; r++){  
                                        
                                        v = String.valueOf( c[r] ).replace("/", ".").trim();
                                        if( v.equals("") ){
                                            
                                            if( !anterior.equals("") ){
                                                
                                                cuntP = 0;
                                                b++;
                                                //System.out.println( anterior );
                                            }
                                        }
                                        else if( !v.equals("") && b == 0 ){
                                            
                                            if( v.equals(".") ){
                                                cuntP++;
                                                
                                                if( cuntP < 2 ){
                                                    loja.append( v ); 
                                                }
                                            }    
                                            else if( cuntP < 2 ){
                                                
                                                loja.append( v ); 
                                            }
                                        }
                                        else if( !v.equals("") && b == 1 ){  
                                            
                                            if( v.equals(".") ){
                                                cuntP++;
                                                
                                                if( cuntP < 2 ){
                                                    sap.append( v ); 
                                                }
                                            }    
                                            else if( cuntP < 2 ){
                                                
                                                sap.append( v ); 
                                            }
                                        }
                                    }
                                    
                                    String busca = ""; try{ busca = sap.toString().trim(); }catch( Exception e ){ }
                                    
                                    List<Gbproduto> XXGbprodutoListaSap = null;
                                    
                                    try{ 
                                        
                                        XXGbprodutoListaSap = (List<Gbproduto>) DAOGenericoJPA.getBeansCom_1_Parametro(Gbproduto.class, "SELECT * FROM SCHEMAJMARY.GBPRODUTO WHERE MATERIAL = ?", busca );
                                    }catch( Exception e ){ }
                                    
                                    String rbusca = ""; try{ rbusca = XXGbprodutoListaSap.get(0).getMaterial(); }catch( Exception e ){}
                                    
                                    if( busca.equals(rbusca) ){
                                        if( !busca.equals("") ){
                                            
                                            String lj = ""; try{ lj = loja.toString().toUpperCase().trim(); }catch( Exception e ){ }
                                                    
                                            Menu.Tabela_Pesquisa_BD_Estabelecimento.pesquisarUltimaEntradaTodasLojas( lj,"", XXGbprodutoListaSap.get(0) );
                                        }
                                    }
                                    else{
                                        
                                        String txt = ListaSAPNaoCadastrado.tpListSap.getText();
                                        ListaSAPNaoCadastrado.tpListSap.setText( txt+"\n"+busca );
                                    }
                                    
                                }                                
                            }
                            
                            String txt = ListaSAPNaoCadastrado.tpListSap.getText().trim();
                            if( !txt.equals("") ){ ListaSAPNaoCadastrado.setVisible(true); }
                        
                            Exportando.fechar();                     
                        }catch( Exception e ){ fechar(); }
                }
            }.start();
    }
    
}
